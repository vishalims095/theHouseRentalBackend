{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/address/address.component.ts","./src/app/address/address.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customer-list/customer-list.component.ts","./src/app/customer-list/customer-list.component.html","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/transection-list/transection-list.component.ts","./src/app/transection-list/transection-list.component.html","./src/app/yes.service.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { from } from 'rxjs';\nimport {YesService} from '../yes.service'\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.css']\n})\nexport class AddressComponent implements OnInit {\n  email = ''\n  password = ''\n  constructor( private fb: FormBuilder, private service : YesService) { }\n\n  ngOnInit(): void {\n    console.log(\"Login calling\")\n  }\n  login(){\n    if(this.email == '' || this.email == null){\n      alert('Email required')\n      return;\n    }\n    if(this.password == '' || this.password == null){\n      alert('Password required')\n      return;\n    }\n    this.service.post('login',{email : this.email, password : this.password}, 0).subscribe(res => {\n      this.service.navigatePage('product-list')\n    }, error => {\n      alert(\"Invalid credential\")\n    })\n    // this.service.navigatePage('transection-list')\n  }\n}\n","\n\n<div class=\"wrapper fadeInDown\">\n  <div id=\"formContent\">\n    <!-- Tabs Titles -->\n\n    <!-- Icon -->\n    <div class=\"fadeIn first\">\n      <img src=\"https://cdn.dribbble.com/users/1041205/screenshots/3636353/dribbble.jpg\" id=\"icon\" alt=\"User Icon\" />\n    </div>\n\n    <!-- Login Form -->\n    <form>\n      <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" [(ngModel)] = \"email\" placeholder=\"login\">\n      <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" [(ngModel)] = \"password\" placeholder=\"password\">\n      <input type=\"submit\" class=\"fadeIn fourth\" value=\"Log In\" (click) = \"login()\">\n    </form>\n\n    <!-- Remind Passowrd -->\n    <div id=\"formFooter\">\n      <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n    </div>\n\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { from } from 'rxjs';\nimport {AddressComponent} from './address/address.component'\nimport {ProductListComponent} from './product-list/product-list.component'\nimport {TransectionListComponent} from './transection-list/transection-list.component'\nimport {CustomerListComponent} from './customer-list/customer-list.component'\nconst routes: Routes = [\n  { path: \"\", component: AddressComponent },\n  { path: \"product-list\", component: ProductListComponent },\n  { path: \"customer-list\", component: CustomerListComponent },\n  { path: \"transection-list\", component: TransectionListComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'addAddress';\n}\n","<!-- VISHAL\n\n<button type=\"button\" class=\"btn btn-success \">Add More</button>\n<div class=\"container address-box\">\n  <div class=\"row\">\n    <div class=\"col col-lg-6\">\n      <h2 style=\"margin-top: 7px;\">Address 1</h2>\n    </div>\n    <div class=\"col col-lg-6\" style=\"text-align: right;\">\n      <button type=\"button\" class=\"btn btn-danger btn-lg\">Danger</button>\n    </div>\n  </div>\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col col-lg-6\">\n      <div class=\"form-group\">\n        <label for=\"usr\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"usr\">\n      </div>\n    </div>\n    <div class=\"col col-lg-6\">\n      <div class=\"form-group\">\n        <label for=\"usr\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"usr\">\n      </div>\n    </div>\n  </div>\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col col-lg-6\">\n      <div class=\"form-group\">\n        <label for=\"usr\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"usr\">\n      </div>\n    </div>\n    <div class=\"col col-lg-6\">\n      <div class=\"form-group\">\n        <label for=\"usr\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"usr\">\n      </div>\n    </div>\n     <div class=\"col col-lg-6\">\n      <h2 style=\"margin-top: 7px;\"></h2>\n    </div>\n    <div class=\"col col-lg-6\" style=\"text-align: right;\">\n      <button type=\"button\" class=\"btn btn-success btn-lg\">Save</button>\n    </div>\n  </div>\n</div> -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddressComponent } from './address/address.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { TransectionListComponent } from './transection-list/transection-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddressComponent,\n    ProductListComponent,\n    CustomerListComponent,\n    TransectionListComponent\n  ],\n  imports: [\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport{YesService} from '../../app/yes.service'\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n  customerList : any = []\n  constructor(private service : YesService) { }\n\n  ngOnInit(): void {\n    this.getCustomer()\n  }\n  getCustomer(){\n    this.service.get('getCustomerData',{}, 0).subscribe(res => {\n      this.customerList = res['response']\n    })\n\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<body>\n\n<div class=\"container\">\n \n \n<div align  = \"center\">\n    <button type=\"button\" class=\"btn btn-primary\" [routerLink] = \"['/product-list']\">Product-List</button> &nbsp;\n\n    <button type=\"button\" class=\"btn btn-success\" [routerLink] = \"['/customer-list']\">Customer-List</button>&nbsp;\n    <button type=\"button\" class=\"btn btn-danger\" [routerLink] = \"['/transection-list']\">Transection-List</button>&nbsp;\n    <!-- <button type=\"button\" class=\"btn btn-primary\">Primary</button>&nbsp; -->\n</div>\n\n  <h2>Customer List</h2>\n  <p>Customer Data:</p>            \n  <table class=\"table table-bordered\">\n    <thead>\n      <tr>\n        <th>Customer Id.</th>\n        <th>Customer Name</th>\n       \n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor = \"let data of customerList\">\n        <td>{{data.customer_id}}</td>\n        <td>{{data.customer_name}}</td>\n      \n      </tr>\n     \n    </tbody>\n  </table>\n</div>\n\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport{YesService} from '../../app/yes.service'\ndeclare var $:any\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  productData : any  = []\n  customerDAta : any = []\n  quantity : any = ''\n  customer_id = ''\n  product_id = ''\n  transection_amount = 0\n  exist_quantity : any = 0\n\n\n  constructor(private service : YesService) { }\n\n  ngOnInit(): void {\n    this.getProduct()\n    this.getCustomer()\n  }\n  getProduct(){\n    this.service.get('getProductData',{}, 0).subscribe(res => {\n      this.productData = res['response']\n    })\n  }\n  getCustomer(){\n    this.service.get('getCustomerData',{}, 0).subscribe(res => {\n      this.customerDAta = res['response']\n    })\n  }\n  rentOut(id) {\n    this.product_id = id\n    this.exist_quantity = (this.productData.filter( e => e._id == this.product_id)[0]).quantity_total\n    $('#myModal').modal('show')\n  }\n  saveTransection() {\n    console.log(this.product_id, this.quantity, this.customer_id)\n    if( this.customer_id == '' || this.customer_id == null || this.customer_id == '0') {\n      alert ('please select Customer')\n      return\n    }\n    if( this.quantity == '' || this.quantity == null || this.quantity == '0') {\n      alert ('please add quantity')\n      return\n    }\n    if(this.exist_quantity < this.quantity) {\n      alert('Quantity exceeded')\n      return\n    }\n    let productPrice = this.productData.filter( e => e._id == this.product_id)[0]\n    this.transection_amount = productPrice['price_perday'] * this.quantity\n    this.service.post('rentProduct', {left_quantity : this.exist_quantity - this.quantity, quantity : this.quantity, product_id : this.product_id, customer_id : this.customer_id, transection_amount : this.transection_amount}, 0).subscribe(res => {\n      $('#myModal').modal('hide')\n      this.service.navigatePage('transection-list')\n    })\n  }\n  exportData(){\n    let arr = []\n    for(let i = 0 ;i<this.productData.length ;i++) {\n      let data = {\n        \"Item Id\" : this.productData[i].product_id,\n        'Item Name' : this.productData[i].product_title,\n        'Available_quantity' : this.productData[i].quantity_total\n      }\n      arr.push(data)\n    }\n    this.service.exportAsExcelFile(arr, 'Inventory Data')\n  }\n  saveDefault(){\n    this.service.get('addData',{},0).subscribe(res => {\n      alert('Default data inserted and all old data cleared')\n      this.getProduct()\n      this.getCustomer()\n    })\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<body>\n\n<div class=\"container\">\n \n \n<div align  = \"center\">\n  <button type=\"button\" class=\"btn btn-primary\" [routerLink] = \"['/product-list']\">Product-List</button> &nbsp;\n\n  <button type=\"button\" class=\"btn btn-success\" [routerLink] = \"['/customer-list']\">Customer-List</button>&nbsp;\n  <button type=\"button\" class=\"btn btn-danger\" [routerLink] = \"['/transection-list']\">Transection-List</button>&nbsp;\n   <!-- <button type=\"button\" class=\"btn btn-primary\">Primary</button>&nbsp; -->\n</div>\n\n<div align = \"right\">\n  <button type=\"button\" align = \"left\" class=\"btn btn-primary\" (click) = \"saveDefault()\">Insert Default Data</button>&nbsp;\n\n  <button type=\"button\" class=\"btn btn-success\" (click) = \"exportData()\">Inventory Report</button>&nbsp;\n\n</div>\n  <h2>Product List</h2>\n  <p>Product Data:</p>            \n  <table class=\"table table-bordered\">\n    <thead>\n      <tr>\n        <th>Product Id.</th>\n        <th>Product Title</th>\n        <th>Quantity</th>\n        <th>Book Quantity</th>\n        <th>Price</th>\n        <th>Rent Out </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor = \"let data of productData\">\n        <td>{{data.product_id}}</td>\n        <td>{{data.product_title}}</td>\n        <td>{{data.quantity_total}}</td>\n        <td>{{data.quantity_book}}</td>\n        <td>{{data.price_perday}}</td>\n        <td>  <button type=\"button\" class=\"btn btn-primary\" (click) = \"rentOut(data._id)\" >Rent-Out</button></td>\n      </tr>\n     \n    </tbody>\n  </table>\n</div>\n\n</body>\n</html>\n\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id = \"myModal\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Rent Out Product</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n\n        \n          <label for=\"fname\">Customer Name:</label><br>\n          <select id=\"cars\" [(ngModel)] = \"customer_id\">\n            <option value={{data._id}} *ngFor = \"let data of customerDAta\">{{data.customer_name}}</option>\n          </select><br><br>\n        \n          <label for=\"lname\">Quantity:</label><br>\n          <input type=\"number\" [(ngModel)] = \"quantity\" id=\"lname\" name=\"lname\" value=\"Doe\"><br><br>\n        \n        \n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click) = \"saveTransection()\">Save changes</button>\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport{YesService} from '../../app/yes.service'\n@Component({\n  selector: 'app-transection-list',\n  templateUrl: './transection-list.component.html',\n  styleUrls: ['./transection-list.component.css']\n})\nexport class TransectionListComponent implements OnInit {\n  transectionData : any = []\n  constructor(private service : YesService) { }\n\n  ngOnInit(): void {\n    this.getTransection()\n  }\n  getTransection (){\n    this.service.get('getTransection', {}, 0).subscribe(res => {\n      this.transectionData = res['response']\n    })\n  }\n  returnProduct(id){\n    console.log(id)\n    this.service.post('returnProduct', {transection_id : id},0).subscribe(res => {\n      this.service.navigatePage('product-list')\n    }, error => {\n      alert('Something went wrong')\n    })\n  }\n  exportData(){\n    let arr = []\n    for(let i = 0;i<this.transectionData.length ;i++){\n      let data = {\n        'Transection Id' : this.transectionData[i].transection_id,\n        'Customer Name' : this.transectionData[i].customer_id.customer_name, \n        'Product Name' : this.transectionData[i].product_id.product_title,\n        'Type' : this.transectionData[i].transection_type,\n        'quantity' : this.transectionData[i].quantity,\n        'Date & Time' : this.transectionData[i].updatedAt,\n      }\n      arr.push(data)\n    }\n    console.log(\"===================>\", arr)\n    this.service.exportAsExcelFile(arr,'Transection Data')\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<body>\n\n<div class=\"container\">\n \n \n<div align  = \"center\">\n  <button type=\"button\" class=\"btn btn-primary\" [routerLink] = \"['/product-list']\">Product-List</button> &nbsp;\n\n  <button type=\"button\" class=\"btn btn-success\" [routerLink] = \"['/customer-list']\">Customer-List</button>&nbsp;\n  <button type=\"button\" class=\"btn btn-danger\" [routerLink] = \"['/transection-list']\">Transection-List</button>&nbsp;\n\n</div>\n<div align = \"right\">\n  <button type=\"button\"  class=\"btn btn-success\" (click) = \"exportData()\" >Export Transection Data</button>&nbsp;\n\n</div>\n\n  <h2>Transection List</h2>\n  <p>Transection Data:</p>            \n  <table class=\"table table-bordered\">\n    <thead>\n      <tr>\n        <th>Transection Id.</th>\n        <th>Product Id.</th>\n        <th>Customer Id.</th>\n        <th>Book Quantity</th>\n        <th>Price</th>\n        <th>Date</th>\n        <th>Type</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor = \"let data of transectionData\">\n        <td>{{data.transection_id}}</td>\n        <td>{{data.product_id.product_id}}</td>\n        <td>{{data.customer_id.customer_id}}</td>\n        <td>{{data.quantity}}</td>\n        <td>{{data.transection_amount}}</td>\n        <td>{{data?.updatedAt|date:'medium'}}</td>\n        <td>{{data.transection_type}}</td>\n        <td><button *ngIf = \"data.transection_type == 'Rent Out'\" type=\"button\" class=\"btn btn-success\" (click) = \"returnProduct(data._id)\">Return Back</button>\n          <button *ngIf = \"data.transection_type == 'Product returned'\" type=\"button\" class=\"btn btn-info\" >Product Returned</button></td>\n      </tr>\n     \n    </tbody>\n  </table>\n</div>\n\n</body>\n</html>","import { Injectable } from '@angular/core';\n\nimport {  Router,ActivatedRoute } from '@angular/router';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../environments/environment';\n\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YesService {\n  baseUrl:any = environment.baseUrl;\n  constructor(private http: HttpClient, private routetingPage:Router) { \n  }\n  post(url, data, isHeader){\n    return this.http.post(this.baseUrl+url, data)\n  }\n  get(url,{}, isHeader){\n    return this.http.get(this.baseUrl+url, {})\n  }\n  navigatePage(page){\n    this.routetingPage.navigate(['/'+page])\n  }\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n  private saveAsExcelFile(buffer: any, fileName: string): void {\n     const data: Blob = new Blob([buffer], {type: EXCEL_TYPE});\n     FileSaver.saveAs(data, fileName + '_export_' + new  Date().getTime() + EXCEL_EXTENSION);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  baseUrl : 'http://localhost:3010/user/',\n\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}